pipeline {
    agent any
	tools {
      terraform 'terraform'
    }
	parameters {
        string(name: 'BRANCH', defaultValue: 'SCRUM-26', description: 'Branch to pull changes')
        choice(name: 'ENV', choices: ['dev', 'stage', 'prod'], description: 'Deployment environment')
		choice(name: 'REGION', choices: ['us'], description: 'Select the region')
        choice(name: 'ZONE', choices: ['central1'], description: 'Select the zone')
        string(name: 'PROJECT_NAME', defaultValue: 'gogs', description: 'Project name')
        string(name: 'JFROG_REGISTRY', defaultValue: 'jfrog.nuwm-diploma.pp.ua', description: 'Project name')
        string(name: 'JFROG_REPOSITORY', defaultValue: 'images', description: 'Project name')
        string(name: 'JFROG_IMAGE_TAG', defaultValue: 'latest', description: 'Gogs image tag')
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: "${params.BRANCH}", credentialsId: 'jenkins-ssh-git-key', url: 'git@github.com:nuwmdiploma/gogs-infrastructure.git'
            }
        }
        stage('Init and Plan'){
			steps {
				script {
                    def environmentGOGS = "${params.ENV}-${params.REGION}-${params.ZONE}-${params.PROJECT_NAME}"
                    echo "Selected environment GOGS: ${environmentGOGS}"
					env.GOGS_ENV = environmentGOGS
                }
                withCredentials([string(credentialsId: 'jfrog_password', variable: 'JFROG_PASSWORD')]) {
                    script {
                        env.TF_VAR_jfrog_password = "${JFROG_PASSWORD}"
                        env.TF_VAR_jfrog_registry = "${JFROG_REGISTRY}"
                        env.TF_VAR_jfrog_repository = "${JFROG_REPOSITORY}"
                        env.TF_VAR_gogs_build_tag = "${JFROG_IMAGE_TAG}"
                    }
                }
                withCredentials([file(credentialsId: "values-${params.ENV}", variable: 'VALUES')]) {
			        dir('terraform/gogs-app/modules/gogs') {
			            sh 'cat $VALUES > values-v1.yaml'
			        }
                }
			    withCredentials([file(credentialsId: "terraform_creds", variable: 'GOOGLE_CREDENTIALS')]) {
			        dir('terraform/gogs-app/environments') {
			            sh 'make plan'
			        }
			    }
			}
		}
		stage('Approve'){
			steps {
			    withCredentials([file(credentialsId: "terraform_creds", variable: 'GOOGLE_CREDENTIALS')]) {
			        dir('terraform/gogs-app/environments') {
			            // sh 'make apply'
			        }
			    }
			}
		}
    }
    post {
        always {
            cleanWs()
        }
    }
}
